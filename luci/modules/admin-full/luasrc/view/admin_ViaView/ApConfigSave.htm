<%
--[[
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
	http://www.apache.org/licenses/LICENSE-2.0
$Id$

* Copyright (c) 2013, VIA Technologies, Inc.
* Project Name:  ViaView web implementation
* File Name   :  ApConfigSave.htm
* Author      :  Rock Yang
* Data        :  2013/05/29
* Description :  this file is use to save user add data to app.
* Revision History
 NO         Data     Revised by       Item       Description
1.0.0.1   2013/05/29  Rock Yang       ...       First release

--]]
%>

<%+header%>

<%
	require "bit"
	require "luci.sys"
	require "luci.tools.webadmin"
	require "nixio.fs"	

	--step 1. send message to AC-app
	local preamble = "viamanag"
	local index = 1
	local cmdSend
	local cmdReceive
	local strIPAddress = luci.http.formvalue("IPAddress")
	local strMACAddress = luci.http.formvalue("MACAddress")

	local cmdElemString={"ApDhcpEnable","ApIpAddress","ApNetmask", "ApGateway",
	"ApScanStatus","ApScanInterval",
	"Ap2.4GEnable","ApClientNumber2.4G","ApHTMode2.4G",
	"ApTransmitPower2.4G","ApMode2.4G", "ApChannel2.4G",
	"ApCountryCode2.4G","ApFragmentation2.4G","ApRTSCTS2.4G",
	"Ap5GEnable","ApClientNumber5G","ApHTMode5G",
	"ApTransmitPower5G","ApMode5G","ApChannel5G",
	"ApCountryCode5G","ApFragmentation5G","ApRTSCTS5G",
	"ApESSID","ApHideSSID","ApRateLimitTX","ApRateLimitRX","ApVLANID",
	"ApSecurityMode","ApIndexCipher","ApKey",
	"ApRadiusPrimaryIP","ApRadiusPrimaryIPPort","ApRadiusPrimaryIPKey",
	"ApRadiusSecondIP","ApRadiusSecondIPPort","ApRadiusSecondIPKey",
	"ApPortalEnable","ApPortalServerIP","ApPortalServerPort","ApMacLimitOption",
	"ApMacLimitList","ApWDSGroup","ApWDSRole","ApWDSParentBSSID"}

	local revCmdElemString={["ApDhcpEnable"]=1,["ApIpAddress"]=2,["ApNetmask"]=3,
	["ApGateway"]=4, ["ApScanStatus"]=5,["ApScanInterval"]=6,
	["Ap2.4GEnable"]=7,["ApClientNumber2.4G"]=8,["ApHTMode2.4G"]=9,
	["ApTransmitPower2.4G"]=10,["ApMode2.4G"]=11,["ApChannel2.4G"]=12,
	["ApCountryCode2.4G"]=13, ["ApFragmentation2.4G"]=14,["ApRTSCTS2.4G"]=15,
	["Ap5GEnable"]=16,["ApClientNumber5G"]=17,["ApHTMode5G"]=18,
	["ApTransmitPower5G"]=19,["ApMode5G"]=20,["ApChannel5G"]=21,
	["ApCountryCode5G"]=22,["ApFragmentation5G"]=23,["ApRTSCTS5G"]=24,
	["ApESSID"]=25,["ApHideSSID"]=26,["ApRateLimitTX"]=27,["ApRateLimitRX"]=28,["ApVLANID"]=29,
	["ApSecurityMode"]=30,["ApIndexCipher"]=31,["ApKey"]=32,
	["ApRadiusPrimaryIP"]=33,["ApRadiusPrimaryIPPort"]=34,["ApRadiusPrimaryIPKey"]=35,
	["ApRadiusSecondIP"]=36,["ApRadiusSecondIPPort"]=37,["ApRadiusSecondIPKey"]=38,
	["ApPortalEnable"]=39,["ApPortalServerIP"]=40,["ApPortalServerPort"]=41,
	["ApMacLimitOption"]=42,["ApMacLimitList"]=43,["ApWDSGroup"]=44,["ApWDSRole"]=45,["ApWDSParentBSSID"]=46}

	--step 2. get save parameter and construct the send command
	--cmdSend = preamble.."APConfigurationSave ".."IPAddress="..strIPAddress
	cmdSend = preamble.."APConfigurationSave ".."MACAddress="..strMACAddress
	index = 1
	local cmdStr = "ApRTSCTS5G"
	while index <= revCmdElemString[cmdStr] do
		local element = cmdElemString[index]
		if (luci.http.formvalue(element)) then
			cmdSend = cmdSend.." "..element.."="..tostring(luci.http.formvalue(element))
		else
			--cmdSend = cmdSend.." "..element.."="
		end
	index = index+1
	end
	--Step 2.2 add 2.4G 5G SSID list to command for send
	if (tostring(luci.http.formvalue("Ap2.4GEnable")) == "true") then
		cmdSend = cmdSend.." "..tostring(luci.http.formvalue("SSIDList2.4GConfig"))
	end
	if (tostring(luci.http.formvalue("Ap5GEnable")) == "true") then
		cmdSend = cmdSend.." "..tostring(luci.http.formvalue("SSIDList5GConfig"))
	end

	-- step 3. setup socket and send command
	local socket = require"socket"
	local host   = "localhost"
	--local host   = "192.168.0.106"
	local port   = "8888"
	local localIp
	local localPort
	--use udp to communicate to AC app
	local udp    = socket.udp()
	udp:settimeout(10)
	--udp:setsockname('*',0x1234)
	udp:setpeername(host,port)
	--udp:sendto("test Message", host, port)
	--udp:send("test message")
	udp:send(cmdSend)

	--step 4. get the socket source port and send to next page
	localIp, localPort = udp:getsockname()
	--cmdReceive  = udp:receive()
	udp:close()

%>

<!--
<h1><%=pcdata(luci.http.formvalue("IPAddress"))%></h1>
<h1><%=pcdata(luci.http.formvalue("ApIpAddress"))%></h1>
<h1><%=pcdata(luci.http.formvalue("ApScanInterval"))%></h1>
<h1><%=pcdata(index)%></h1>
<h1><%=pcdata(cmdSend)%></h1>
<br />
<h1><%=pcdata(cmdReceive)%></h1>
<h1><%=pcdata(udp)%></h1>
<h1><%=pcdata(localIp)%></h1>
<h1><%=pcdata(localPort)%></h1>
-->


<h2><a id="content" name="content">AP - Configuration applying...</a></h2>
<fieldset class="cbi-section">
	<p>
		The new configuraton is applying now.<br /> Wait a few minutes until you try to reconnect. It might be necessary to renew the address of your computer to reach the device again, depending on your settings.
	</p>
	<p>
		<img src="/luci-static/resources/icons/loading.gif" alt="Loading" style="vertical-align:middle" />
						Waiting for changes to be applied...
	</p>
</fieldset>

<h1 id="StatusMessage"> Status </h1>

<!--
<br />
<div class="cbi-page-actions">
	<form class="inline" method="get" action="<%=controller%>/admin/ViaView/APList">
		<input class="cbi-button cbi-button-link" style="margin:0" type="submit" value="<%:Back%>" />
	</form>
</div>
-->


<script>
	var xmlHttp;
	function createXMLHttpRequest(){
		if (window.XMLHttpRequest) {  // Non-IE browsers
			xmlHttp = new XMLHttpRequest();
		}
		else if (window.ActiveXObject) {  //IE
			xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
		}
		else {  //browsers doesn's support AJAX
			alert("ApConfigSave.htm: XMLHttpRequest is not supported by this browser!");
		}
	}

	function funAjaxStart(){
		createXMLHttpRequest();
		var url = "<%=controller%>/admin/ViaView/APList/ApConfigSaveAjax?localPort=<%=pcdata(localPort)%>";
		xmlHttp.open("GET",url,true);
		xmlHttp.onreadystatechange=callback;  //set server information function
		xmlHttp.send(null);
	}

	function callback(){
		if (xmlHttp.readyState == 4){
			if (xmlHttp.status == 200)
			{
				var strResponse = xmlHttp.responseText;  // get the web server response message
				document.getElementById("StatusMessage").innerHTML = strResponse;
                                //console.log(xmlHttp.responseText);
				setTimeout(function(){location.href="<%=controller%>/admin/ViaView/APList";},5000);
			}
			else
			{
				document.getElementById("StatusMessage").innerHTML = "Failure1";
				setTimeout(function(){location.href="<%=controller%>/admin/ViaView/APList";},5000);
			}
		}
		else
		{
			document.getElementById("StatusMessage").innerHTML = "Failure2";
			setTimeout(function(){location.href="<%=controller%>/admin/ViaView/APList";},5000);
		}
	}
funAjaxStart();
</script>
<%+footer%>
