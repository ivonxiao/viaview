<%
--[[
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
	http://www.apache.org/licenses/LICENSE-2.0
$Id$

* Copyright (c) 2013, VIA Technologies, Inc.
* Project Name:  ViaView web implementation
* File Name   :  ApConfig.htm
* Author      :  Rock Yang
* Data        :  2013/05/29
* Description :  this file is use to save user add data to app.
* Revision History
 NO         Data     Revised by       Item       Description
1.0.0.1   2013/05/29  Rock Yang       ...       First release
1.0.0.2   2013/10/27  Rock Yang       ...       support 8 SSID list

--]]
%>

<%+header%>

<!--
<script>
//<![CDATA[
console.log(location.search);
str1=location.search;
strAPName=str1.substring(str1.indexOf("APName=")+6,str1.indexOf('&'))
//document.getElementById("APName").value=strAPName;
//]]>
</script>
-->

<%
	require "bit"
	require "luci.sys"
	require "luci.tools.webadmin"
	require "nixio.fs"	
	local h    = require "luci.http"
	local io   = require "nixio"
	local fd   = nil
	local flag = true
	local path = nil

	--get message from AC-app
	local preamble = "viamanag"
	local cmdReceive = ""
	local statusCmdRecv = false
	local index = 1
	local element
	local SSIDList24GIdx = 1
	local SSIDList5GIdx = 1
	local SSIDList24GItemArray = {}
	SSIDList24GItemArray[1] = {}
	local SSIDList5GItemArray = {}
	SSIDList5GItemArray[1] = {}

	local cmdElemValue={}
	local cmdElemString={"ApDhcpEnable","ApIpAddress","ApNetmask", "ApGateway",
	"ApScanStatus","ApScanInterval",
	"Ap2.4GEnable","ApClientNumber2.4G","ApHTMode2.4G",
	"ApTransmitPower2.4G","ApMode2.4G", "ApChannel2.4G",
	"ApCountryCode2.4G","ApFragmentation2.4G","ApRTSCTS2.4G",
	"Ap5GEnable","ApClientNumber5G","ApHTMode5G",
	"ApTransmitPower5G","ApMode5G","ApChannel5G",
	"ApCountryCode5G","ApFragmentation5G","ApRTSCTS5G",
	"ApESSID","APBSSID","ApHideSSID","ApRateLimitTX","ApRateLimitRX","ApVLANID",
	"ApSecurityMode","ApIndexCipher","ApKey",
	"ApRadiusPrimaryIP","ApRadiusPrimaryIPPort","ApRadiusPrimaryIPKey",
	"ApRadiusSecondIP","ApRadiusSecondIPPort","ApRadiusSecondIPKey",
	"ApPortalEnable","ApPortalServerIP","ApPortalServerPort","ApMacLimitOption",
	"ApMacLimitList","ApWDSGroup","ApWDSRole","ApWDSParentBSSID"}

	local revCmdElemString={["ApDhcpEnable"]=1,["ApIpAddress"]=2,["ApNetmask"]=3,
	["ApGateway"]=4, ["ApScanStatus"]=5,["ApScanInterval"]=6,
	["Ap2.4GEnable"]=7,["ApClientNumber2.4G"]=8,["ApHTMode2.4G"]=9,
	["ApTransmitPower2.4G"]=10,["ApMode2.4G"]=11,["ApChannel2.4G"]=12,
	["ApCountryCode2.4G"]=13, ["ApFragmentation2.4G"]=14,["ApRTSCTS2.4G"]=15,
	["Ap5GEnable"]=16,["ApClientNumber5G"]=17,["ApHTMode5G"]=18,
	["ApTransmitPower5G"]=19,["ApMode5G"]=20,["ApChannel5G"]=21,
	["ApCountryCode5G"]=22,["ApFragmentation5G"]=23,["ApRTSCTS5G"]=24,
	["ApESSID"]=25,["APBSSID"]=26,["ApHideSSID"]=27,["ApRateLimitTX"]=28,["ApRateLimitRX"]=29,["ApVLANID"]=30,
	["ApSecurityMode"]=31,["ApIndexCipher"]=32,["ApKey"]=33,
	["ApRadiusPrimaryIP"]=34,["ApRadiusPrimaryIPPort"]=35,["ApRadiusPrimaryIPKey"]=36,
	["ApRadiusSecondIP"]=37,["ApRadiusSecondIPPort"]=38,["ApRadiusSecondIPKey"]=39,
	["ApPortalEnable"]=40,["ApPortalServerIP"]=41,["ApPortalServerPort"]=42,
	["ApMacLimitOption"]=43,["ApMacLimitList"]=44,["ApWDSGroup"]=45,["ApWDSRole"]=46,["ApWDSParentBSSID"]=47}

    -- Set upload file code 
    -- except the statement sentence, no code block is available before the setfilehandler
    h.setfilehandler(
        function(field, chunk, eof)
            if not field then
				return
            end
			
            path = "/tmp/MacSecurity.csv"

            if flag then
                --h.write("uploading...")
                flag = false
            end         
            
            if not fd then
                fd = io.open(path, "w")
            end
            
            fd:write(chunk)
            
            if eof and fd then
                fd:close()
                fd = nil
                --h.write("<br />upload done.")
                --luci.template.render("admin_ViaView/MacSecurityUpgrade", {
		--			status = true,
		--			filename = path
		--		})
            end

            --luci.http.redirect(
            --    luci.dispatcher.build_url("admin", "status", "iptables")
            --)
            --luci.http.redirect(luci.dispatcher.build_url("admin/ViaView/APList") .. "?display=list")
            --h.redirect(h.dispatcher.build_url("admin", "ViaView", "APUpdate"))
        end
    )
    -- this section must be put under setfilehandler
    if h.formvalue("act") == "update" then
        return
    end

	local socket = require"socket"
	local host   = "localhost"
	--local host   = "192.168.0.106"
	local port   = "8888"

	--Step 1. use udp to communicate to AC app
	local udp    = socket.udp()
	udp:settimeout(10)
	udp:setpeername(host,port)
	--udp:sendto("test Message", host, port)
	udp:send(preamble.."APConfigurationStart".."MACAddress="..tostring(luci.http.formvalue("MACAddress")))

	--Step 2. check the cmd receive frome AC
	statusCmdRecv = false
	local cmdElemIndex = 1
	while cmdElemIndex <= 100 do
		local StrCmdReceive = udp:receive()
		if (StrCmdReceive) then
			
			if (string.find(StrCmdReceive, preamble.."APConfigurationStart")) then
				statusCmdRecv = true
			end
			if (string.find(StrCmdReceive, preamble.."APConfigurationEnd")) then
				break
			end
			cmdReceive = cmdReceive..StrCmdReceive
			cmdElemIndex = cmdElemIndex + 1
		else
			break
		end
	end
	udp:close()

	if statusCmdRecv then
		--Step 3. parse (Network 2.4G/5G Base information) element form receive command
		index = 1
		local cmdStr = "ApRTSCTS5G"
		while index <= revCmdElemString[cmdStr] do
			element = cmdElemString[index].."="
			if string.find(cmdReceive, element) then
				local strTmp = string.sub(cmdReceive,string.find(cmdReceive, element),-1)
				strTmp = string.sub(strTmp,string.len(element)+1,-1)
				if string.find(strTmp, " ") then
					cmdElemValue[index] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
				else
					cmdElemValue[index] = strTmp
				end
			end
		index = index+1
		end

		--Step 4. pare 2.4G MultiSSID List information from receive command
		local strSSIDList = cmdReceive
		while SSIDList24GIdx <= 8 do
			SSIDList24GItemArray[SSIDList24GIdx] = {}
			local strSSIDElement = "SSIDList2.4GElementStart"
			if string.find(strSSIDList, strSSIDElement) then
				strSSIDList = string.sub(strSSIDList,string.find(strSSIDList,strSSIDElement),-1)
				strSSIDList = string.sub(strSSIDList,string.len(strSSIDElement)+1,-1)
				index = revCmdElemString["ApESSID"]		
				while index <= #cmdElemString do
					element = cmdElemString[index].."="
					if string.find(strSSIDList,element) then
						local strTmp = string.sub(strSSIDList,string.find(strSSIDList,element),-1)
						strTmp = string.sub(strTmp,string.len(element)+1,-1)
						if string.find (strTmp, " ") then
							SSIDList24GItemArray[SSIDList24GIdx][index] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
						else
							SSIDList24GItemArray[SSIDList24GIdx][index] = strTmp
						end
					else
						SSIDList24GItemArray[SSIDList24GIdx][index] = ""
					end
				index = index+1
				end
				SSIDList24GIdx = SSIDList24GIdx + 1
			else
				break
			end
		end


		--Step 5. pare 5G MultiSSID List information from receive command
		strSSIDList = cmdReceive
		while SSIDList5GIdx <= 8 do
			SSIDList5GItemArray[SSIDList5GIdx] = {}
			local strSSIDElement = "SSIDList5GElementStart"
			if string.find(strSSIDList, strSSIDElement) then
				strSSIDList = string.sub(strSSIDList,string.find(strSSIDList,strSSIDElement),-1)
				strSSIDList = string.sub(strSSIDList,string.len(strSSIDElement)+1,-1)
				index = revCmdElemString["ApESSID"]
				while index <= #cmdElemString do
					element = cmdElemString[index].."="
					if string.find(strSSIDList,element) then
						local strTmp = string.sub(strSSIDList,string.find(strSSIDList,element),-1)
						strTmp = string.sub(strTmp,string.len(element)+1,-1)
						if string.find (strTmp, " ") then
							SSIDList5GItemArray[SSIDList5GIdx][index] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
						else
							SSIDList5GItemArray[SSIDList5GIdx][index] = strTmp
						end
					else
						SSIDList5GItemArray[SSIDList5GIdx][index] = ""
					end
				index = index+1
				end
				SSIDList5GIdx = SSIDList5GIdx + 1
			else
				break
			end
		end


	end

	strAPName = luci.http.formvalue("APName")
	strIPAddress = luci.http.formvalue("IPAddress")
	strMACAddress = luci.http.formvalue("MACAddress")

	--get wds config 
function makeRecordFromStr(str)
	local record={}
	for k,v in string.gmatch(str,"(%w+)=([^&%s]+)") do
		if(record[k] == nil) then
			record[k]=v
		else
			local client=record[k]
			if(type(client) ~= "table") then
				record[k]={client}
				table.insert(record[k],v)
			else
				table.insert(record[k],v)
			end	
		end
	end
	return record
end
local json=require "luci.json"
function connect()
	local socket=require "socket"
	local udp=socket:udp()
	local host="localhost"
	local port="8888"
	udp:settimeout(10)
	udp:setpeername(host,port)
	return udp
end
function getReceivedData(conn,request,start,eof_data)
	local index=1	
	local list={}
	conn:send(request)
	while index<= 300 do
		local info=conn:receive()
		if(info) then		
			if(string.find(info,eof_data)) then
				break
			end
			list[index]=info			
			if(string.find(info,start)) then
				index =index +1
			end
		else
			break
		end
	end	
	return list
end
function strList2ObjList(strlist)
	local objlist={}
	for i=1, #strlist do
		local info=makeRecordFromStr(strlist[i])
		table.insert(objlist,info)
	end
	return objlist
end
function isWDSAP(wdslist,mac)
	local isWDS=false
	for i=1,#wdslist do
		local server_mac=wdslist[i].server
		local clients=wdslist[i].client
		if(server_mac == mac) then
			isWDS=true
			break
		end
		if(clients ~= nil) then
			if(type(clients) ~="table")then
				if(clients == mac) then
					isWDS=true
					return isWDS
				end	
			else	
				for j=1,#clients do
					local cli_mac=clients[j]
					if(cli_mac == mac) then
						isWDS=true
						return isWDS
					end	
				end	
			end	
		end	
	end
	return isWDS
end	

	conn=connect()
	aps=getReceivedData(conn,"viamanaggetWDSConfInfo","viamanaggetWDSConfInfo","viamanaggetWDSEnd")
	list=strList2ObjList(aps)
	conn:close()
	iswds=isWDSAP(list,strMACAddress)
%>

<style>
table{border-collapse:collapse;border-spacing:none;}
td,th,tr{font-size:11px;}
td input,td select{font-size:11px;}        

.tabSSIDSetting {overflow:auto;height:101px;}
.tabSSIDSetting tr{height:20px;width:auto}
.tabSSIDSetting tbody td,.tabSSIDSetting tbody th{text-align:left;border:1px solid #ccc;}
#maincontent{position:relative}
</style>
<form class="inline" onsubmit="return validate_form(this)" method="post" action="<%=controller%>/admin/ViaView/APList/ApConfigSave" enctype="multipart/form-data" >
<div class="cbi-map" id="cbi-dhcp">
	<h2><a id="content" name="content"><%:AP Configuration%></a></h2>
	<div class="cbi-map-descr">Set AP's IP <abbr title="Dynamic Host Configuration Protocol">DHCP</abbr>-Server <abbr title="Service Set Identifier">SSID </abbr>and 2.4G/5G wireless attribute </div>

	<input id="IPAddress" type="hidden" name="IPAddress" value="<%=pcdata(strIPAddress)%>" />
	<input id="MACAddress" type="hidden" name="MACAddress" value="<%=pcdata(strMACAddress)%>" />
	<input id="SSIDList2.4GConfig" type="hidden" name="SSIDList2.4GConfig" value="" />
	<input id="SSIDList5GConfig" type="hidden" name="SSIDList5GConfig" value="" />


	<fieldset class="cbi-section" id="cbi-dhcp-dnsmasq">
	<legend>Device Configuration:
			<input id="APName" type="text" name="APName" value="<%=pcdata(strAPName)%>" style="font-size:110%;font-weight:bold;width:100px;color:blue;border-style:none;background-color:transparent;" disabled="disabled" />
	</legend>
	<ul class="cbi-tabmenu">
		<li class="cbi-tab"><a href="#" onclick="fTopTabSelectAction('tabBaseInfo');">
		Base Information
		</a></li><li class="cbi-tab"><a href="#" onclick="fTopTabSelectAction('tab24GConfig');">
		2.4G Enable:
		<%	if (cmdElemValue[revCmdElemString["Ap2.4GEnable"]] == "true") then	%>
		<input id="Ap2.4GEnable" class="cbi-input-checkbox" type="checkbox"  name="Ap2.4GEnable" value="true" checked="checked" onclick="f24G5GEnable('Ap2.4GEnable');" style="height:15px;" />
		<%	else	%>
		<input id="Ap2.4GEnable" class="cbi-input-checkbox" type="checkbox" name="Ap2.4GEnable" value="true" onclick="f24G5GEnable('Ap2.4GEnable');" style="height:15px;" />
		<%	end	%>
		</a></li><li class="cbi-tab"><a href="#" onclick="fTopTabSelectAction('tab5GConfig');">
		5G Enable
		<%	if (cmdElemValue[revCmdElemString["Ap5GEnable"]] == "true") then	%>
		<input id="Ap5GEnable" class="cbi-input-checkbox" type="checkbox" name="Ap5GEnable" value="true" checked="checked" onclick="f24G5GEnable('Ap5GEnable');" style="height:15px;" <%if (iswds) then %>disabled="disabled" <%end%> />
		<%	else	%>
		<input id="Ap5GEnable" class="cbi-input-checkbox" type="checkbox" name="Ap5GEnable" value="true" onclick="f24G5GEnable('Ap5GEnable');" style="height:15px;" <%if (iswds) then %>disabled="disabled" <%end%> />
		<%	end	%>
		</a></li>
	</ul>
	<fieldset class="cbi-section-node cbi-section-node-tabbed">
		<div class="cbi-tabcontainer">
		<div id="tabBaseInfo" style="border:1px solid #ccc;">

			<div class="cbi-value"><label class="cbi-value-title">DHCP Enable</label>
			<div class="cbi-value-field">
				<%	if (cmdElemValue[revCmdElemString["ApDhcpEnable"]] == "true") then	%>
				<input id="ApDhcpEnable" class="cbi-input-checkbox" type="checkbox" name="ApDhcpEnable" value="true" checked="checked" onclick="fDhcpEnable('ApDhcpEnable');" />
				<%	else	%>
				<input id="ApDhcpEnable" class="cbi-input-checkbox" type="checkbox" name="ApDhcpEnable" value="true" onclick="fDhcpEnable('ApDhcpEnable');" />
				<%	end	%>
			<!--
			<div class="cbi-value-description">
			<span class="cbi-value-helpicon"><img src="/luci-static/resources/cbi/help.gif" alt="help" /></span>
			Enable this AP's  <abbr title="Dynamic Host Configuration Protocol">DHCP</abbr> function in the local network
			</div>
			-->
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Scan Status</label>
			<div class="cbi-value-field">
				<%	if (cmdElemValue[revCmdElemString["ApScanStatus"]] == "true") then	%>
				<input id="ApScanStatus" class="cbi-input-checkbox" type="checkbox" name="ApScanStatus" value="true" checked="checked" onclick="fDhcpEnable('ApScanStatus');" />
				<%	else	%>
				<input id="ApScanStatus" class="cbi-input-checkbox" type="checkbox" name="ApScanStatus" value="true" onclick="fDhcpEnable('ApScanStatus');" />
				<%	end	%>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Scan Interval (5~65535)</label>
			<div class="cbi-value-field">
				<input id="ApScanInterval" type="text" name="ApScanInterval" value="<%=pcdata(cmdElemValue[revCmdElemString['ApScanInterval']])%>" style="width:50px" />
				<br />
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">IP Address</label>
			<div class="cbi-value-field">
				<input id="ApIpAddress" type="text" class="cbi-input-text" name="ApIpAddress" value="<%=pcdata(cmdElemValue[revCmdElemString['ApIpAddress']])%>" />
				<br />
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Netmask</label>
			<div class="cbi-value-field">
				<input id="ApNetmask" type="text" class="cbi-input-text" name="ApNetmask" value="<%=pcdata(cmdElemValue[revCmdElemString['ApNetmask']])%>" />
				<br />
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Gateway</label>
			<div class="cbi-value-field">
				<input id="ApGateway" type="text" class="cbi-input-text" name="ApGateway" value="<%=pcdata(cmdElemValue[revCmdElemString['ApGateway']])%>" />
				<br />
			</div></div>
		</div></div>

		<div class="cbi-tabcontainer">
		<div id="tab24GConfig" style="display:none;">
			<!--
			<div class="cbi-value"><label class="cbi-value-title">Enable 2.4G Mode</label>
			<div class="cbi-value-field">
				<%	if (cmdElemValue[revCmdElemString["Ap2.4GEnable"]] == "true") then	%>
				<input id="Ap2.4GEnable" class="cbi-input-checkbox" type="checkbox"  name="Ap2.4GEnable" value="true" checked="checked" onclick="f24G5GEnable('Ap2.4GEnable');" />
				<%	else	%>
				<input id="Ap2.4GEnable" class="cbi-input-checkbox" type="checkbox" name="Ap2.4GEnable" value="true" onclick="f24G5GEnable('Ap2.4GEnable');" />
				<%	end	%>
			</div></div>
			-->

			<div class="cbi-value"><label class="cbi-value-title">Client Number</label>
			<div class="cbi-value-field">
				<input id="ApClientNumber2.4G" type="text" class="cbi-input-text" name="ApClientNumber2.4G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApClientNumber2.4G']])%>" />
				<br />
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">HT Mode</label>
			<div class="cbi-value-field">
				<select id="ApHTMode2.4G" class="cbi-input-select" name="ApHTMode2.4G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApHTMode2.4G']])%>" >
				<option id="cbi-network-wan-proto-static" value="0">20MHz</option>
				<option id="cbi-network-wan-proto-static" value="1">40MHz 2nd channel below</option>
				<option id="cbi-network-wan-proto-static" value="2">40MHz 2nd channel above</option>
				</select>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Transmit Power</label>
			<div class="cbi-value-field">
				<select id="ApTransmitPower2.4G" class="cbi-input-select" name="ApTransmitPower2.4G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApTransmitPower2.4G']])%>" >
				<option id="cbi-network-wan-proto-static" value="0">0 dBm(1mW)</option>
				<option id="cbi-network-wan-proto-static" value="1">4 dBm(2mW)</option>
				<option id="cbi-network-wan-proto-static" value="2">5 dBm(3mW)</option>
				<option id="cbi-network-wan-proto-static" value="3">7 dBm(5mW)</option>
				<option id="cbi-network-wan-proto-static" value="4">8 dBm(6mW)</option>
				<option id="cbi-network-wan-proto-static" value="5" selected="selected">9 dBm(7mW)</option>
				<option id="cbi-network-wan-proto-static" value="6">10 dBm(10mW)</option>
				<option id="cbi-network-wan-proto-static" value="7">11 dBm(12mW)</option>
				<option id="cbi-network-wan-proto-static" value="8">12 dBm(15mW)</option>
				<option id="cbi-network-wan-proto-static" value="9">13 dBm(19mW)</option>
				<option id="cbi-network-wan-proto-static" value="10">14 dBm(25mW)</option>
				<option id="cbi-network-wan-proto-static" value="11">15 dBm(31mW)</option>
				<option id="cbi-network-wan-proto-static" value="12">16 dBm(39mW)</option>
				<option id="cbi-network-wan-proto-static" value="13">17 dBm(50mW)</option>
				<option id="cbi-network-wan-proto-static" value="14">18 dBm(63mW)</option>
				<option id="cbi-network-wan-proto-static" value="15">19 dBm(79mW)</option>
				<option id="cbi-network-wan-proto-static" value="16">20 dBm(100mW)</option>
				<option id="cbi-network-wan-proto-static" value="17">21 dBm(125mW)</option>
				<option id="cbi-network-wan-proto-static" value="18">22 dBm(158mW)</option>
				<option id="cbi-network-wan-proto-static" value="19">23 dBm(199mW)</option>
				<option id="cbi-network-wan-proto-static" value="20">24 dBm(251mW)</option>
				<option id="cbi-network-wan-proto-static" value="21">25 dBm(316mW)</option>
				<option id="cbi-network-wan-proto-static" value="22">26 dBm(398mW)</option>
				<option id="cbi-network-wan-proto-static" value="23">27 dBm(501mW)</option>
				</select>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Mode</label>
			<div class="cbi-value-field">
				<select id="ApMode2.4G" class="cbi-input-select" name="ApMode2.4G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApMode2.4G']])%>" >
				<option id="cbi-network-wan-proto-static" value="1">802.11 b</option>
				<option id="cbi-network-wan-proto-static" value="2">802.11 g</option>
				<option id="cbi-network-wan-proto-static" value="3">802.11 g+n</option>
				</select>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Channel</label>
			<div class="cbi-value-field">
				<select id="ApChannel2.4G" class="cbi-input-select" name="ApChannel2.4G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApChannel2.4G']])%>" >
				<option id="cbi-network-wan-proto-static" value="0">auto</option>
				<option id="cbi-network-wan-proto-static" value="1">1(2.412GHz)</option>
				<option id="cbi-network-wan-proto-static" value="2">2(2.417GHz)</option>
				<option id="cbi-network-wan-proto-static" value="3">3(2.422GHz)</option>
				<option id="cbi-network-wan-proto-static" value="4">4(2.427GHz)</option>
				<option id="cbi-network-wan-proto-static" value="5">5(2.432GHz)</option>
				<option id="cbi-network-wan-proto-static" value="6">6(2.437GHz)</option>
				<option id="cbi-network-wan-proto-static" value="7">7(2.442GHz)</option>
				<option id="cbi-network-wan-proto-static" value="8">8(2.447GHz)</option>
				<option id="cbi-network-wan-proto-static" value="9">9(2.452GHz)</option>
				<option id="cbi-network-wan-proto-static" value="10">10(2.457GHz)</option>
				<option id="cbi-network-wan-proto-static" value="11">11(2.462GHz)</option>
				</select>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Country Code</label>
			<div class="cbi-value-field">
				<input id="ApCountryCode2.4G" type="text" class="cbi-input-text" name="ApCountryCode2.4G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApCountryCode2.4G']])%>" disabled="disabled"/>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Fragmentation</label>
			<div class="cbi-value-field">
				<input id="ApFragmentation2.4G" type="text" class="cbi-input-text" name="ApFragmentation2.4G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApFragmentation2.4G']])%>" />
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">RTS/CTS</label>
			<div class="cbi-value-field">
				<input id="ApRTSCTS2.4G" type="text" class="cbi-input-text" name="ApRTSCTS2.4G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRTSCTS2.4G']])%>" />
			</div></div>
		</div></div>

		<div class="cbi-tabcontainer">
		<div id="tab5GConfig" style="display:none;">
			<!--
			<div class="cbi-value"><label class="cbi-value-title">Enable 5G Mode</label>
			<div class="cbi-value-field">
				<%	if (cmdElemValue[revCmdElemString["Ap5GEnable"]] == "true") then	%>
				<input id="Ap5GEnable" class="cbi-input-checkbox" type="checkbox" name="Ap5GEnable" value="true" checked="checked" onclick="f24G5GEnable('Ap5GEnable');" />
				<%	else	%>
				<input id="Ap5GEnable" class="cbi-input-checkbox" type="checkbox" name="Ap5GEnable" value="true" onclick="f24G5GEnable('Ap5GEnable');" />
				<%	end	%>
			</div></div>
			-->

			<div class="cbi-value"><label class="cbi-value-title">Client Number</label>
			<div class="cbi-value-field">
				<input id="ApClientNumber5G" type="text" class="cbi-input-text" name="ApClientNumber5G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApClientNumber5G']])%>" />
				<br />
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">HT Mode</label>
			<div class="cbi-value-field">
				<select id="ApHTMode5G" class="cbi-input-select" name="ApHTMode5G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApHTMode5G']])%>" <%if iswds then %>disabled="disabled"<%end%> >
				<option id="cbi-network-wan-proto-static" value="0">20MHz</option>
				<option id="cbi-network-wan-proto-static" value="1">40MHz 2nd channel below</option>
				<option id="cbi-network-wan-proto-static" value="2">40MHz 2nd channel above</option>
				</select>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Transmit Power</label>
			<div class="cbi-value-field">
				<select id="ApTransmitPower5G" class="cbi-input-select" name="ApTransmitPower5G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApTransmitPower5G']])%>" >
				<option id="cbi-network-wan-proto-static" value="0">0 dBm(1mW)</option>
				<option id="cbi-network-wan-proto-static" value="1">4 dBm(2mW)</option>
				<option id="cbi-network-wan-proto-static" value="2">5 dBm(3mW)</option>
				<option id="cbi-network-wan-proto-static" value="3">7 dBm(5mW)</option>
				<option id="cbi-network-wan-proto-static" value="4">8 dBm(6mW)</option>
				<option id="cbi-network-wan-proto-static" value="5">9 dBm(7mW)</option>
				<option id="cbi-network-wan-proto-static" value="6">10 dBm(10mW)</option>
				<option id="cbi-network-wan-proto-static" value="7">11 dBm(12mW)</option>
				<option id="cbi-network-wan-proto-static" value="8">12 dBm(15mW)</option>
				<option id="cbi-network-wan-proto-static" value="9">13 dBm(19mW)</option>
				<option id="cbi-network-wan-proto-static" value="10">14 dBm(25mW)</option>
				<option id="cbi-network-wan-proto-static" value="11">15 dBm(31mW)</option>
				<option id="cbi-network-wan-proto-static" value="12">16 dBm(39mW)</option>
				<option id="cbi-network-wan-proto-static" value="13">17 dBm(50mW)</option>
				<option id="cbi-network-wan-proto-static" value="14">18 dBm(63mW)</option>
				<option id="cbi-network-wan-proto-static" value="15">19 dBm(79mW)</option>
				<option id="cbi-network-wan-proto-static" value="16">20 dBm(100mW)</option>
				<option id="cbi-network-wan-proto-static" value="17">21 dBm(125mW)</option>
				<option id="cbi-network-wan-proto-static" value="18">22 dBm(158mW)</option>
				<option id="cbi-network-wan-proto-static" value="19">23 dBm(199mW)</option>
				<option id="cbi-network-wan-proto-static" value="20">24 dBm(251mW)</option>
				<option id="cbi-network-wan-proto-static" value="21">25 dBm(316mW)</option>
				<option id="cbi-network-wan-proto-static" value="22">26 dBm(398mW)</option>
				<option id="cbi-network-wan-proto-static" value="23">27 dBm(501mW)</option>
				</select>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Mode</label>
			<div class="cbi-value-field">
				<select id="ApMode5G" class="cbi-input-select" name="ApMode5G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApMode5G']])%>" >
				<option id="cbi-network-wan-proto-static" value="1">802.11 a</option>
				<option id="cbi-network-wan-proto-static" value="2">802.11 a+n</option>
				</select>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Channel</label>
			<div class="cbi-value-field">
				<select id="ApChannel5G" class="cbi-input-select" name="ApChannel5G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApChannel5G']])%>" <%if iswds then %>disabled="disabled"<%end%> >
				<option id="cbi-network-wan-proto-static" value="0">auto</option>
				<option id="cbi-network-wan-proto-static" value="1">36(5.180GHz)</option>
				<option id="cbi-network-wan-proto-static" value="2">40(5.200GHz)</option>
				<option id="cbi-network-wan-proto-static" value="3">44(5.220GHz)</option>
				<option id="cbi-network-wan-proto-static" value="4">48(5.240GHz)</option>
				<option id="cbi-network-wan-proto-static" value="5">149(5.745GHz)</option>
				<option id="cbi-network-wan-proto-static" value="6">153(5.765GHz)</option>
				<option id="cbi-network-wan-proto-static" value="7">157(5.785GHz)</option>
				<option id="cbi-network-wan-proto-static" value="8">161(5.805GHz)</option>
				<option id="cbi-network-wan-proto-static" value="9">165(5.825GHz)</option>
				</select>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Country Code</label>
			<div class="cbi-value-field">
				<input id="ApCountryCode5G" type="text" class="cbi-input-text" name="ApCountryCode5G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApCountryCode5G']])%>" disabled="disabled"/>
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">Fragmentation</label>
			<div class="cbi-value-field">
				<input id="ApFragmentation5G" type="text" class="cbi-input-text" name="ApFragmentation5G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApFragmentation5G']])%>" />
			</div></div>

			<div class="cbi-value"><label class="cbi-value-title">RTS/CTS</label>
			<div class="cbi-value-field">
				<input id="ApRTSCTS5G" type="text" class="cbi-input-text" name="ApRTSCTS5G" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRTSCTS5G']])%>" />
			</div></div>
		</div>
		</div>

	</fieldset>
	</fieldset>

	<div id="tabInterfaceConfig" style="display:none;">
	<fieldset class="cbi-section" id="cbi-dhcp-dnsmasq">
	<legend>Interface Configuraion</legend>
		<fieldset class="cbi-section">
		<legend>SSID Setting List</legend>
			<div class="tabSSIDSetting" style="width:auto;overflow:auto;">	
			<table class="cbi-section-table" >
			<tbody id="idtabSSIDSettingList">	
				<tr>
					<th >ESSID</th>
					<th>BSSID</th>
					<th >Hide SSID</th>
					<th >VLAN ID</th>
					<th >Security Mode</th>
					<th >Index/Cipher</th>
					<th >Key</th>
					<th >Portal Enable</th>
					<!--
					<th class="cbi-section-table-cell">Gateway ID</th>
					<th class="cbi-section-table-cell">Portal server IP</th>
					<th class="cbi-section-table-cell">Portal server Port</th>
					<th class="cbi-section-table-cell">Primary IP</th>
					<th class="cbi-section-table-cell">Port</th>
					<th class="cbi-section-table-cell">Key</th>
					<th class="cbi-section-table-cell">Second IP</th>
					<th class="cbi-section-table-cell">Port</th>
					<th class="cbi-section-table-cell">Key</th>
					-->
				</tr>
				<!--
				<tr>
					<td >VIA2.4G</td>
					<td >false</td>
					<td >3600</td>
					<td >No Encryption</td>
					<td >auto</td>
					<td >None</td>
					<td >false</td>
				</tr>
				-->
			</tbody>
			</table>
			</div>

			<input onclick="fSSIDListAdd();" type="button" style="font-size:11px;width:50px;" value="Add" />
			<input onclick="fSSIDListSave();" type="button" style="font-size:11px;width:50px;" value="Save" />
			<input onclick="fSSIDListDelete();" type="button" style="font-size:11px;width:50px;" value="Delete" />
		</fieldset>


		<fieldset class="cbi-section">
		<legend>SSID Setting</legend>
		<ul class="cbi-tabmenu">
			<li class="cbi-tab"><a href="#" onclick="fBottomTabSelectAction('tabGenSetup');">
			General Setup
			</a></li><li class="cbi-tab"><a href="#" onclick="fBottomTabSelectAction('tabWlSecurity');">
			Wireless Security
			</a></li><li class="cbi-tab"><a href="#" onclick="fBottomTabSelectAction('tabRadiusServer');">
			Radius Server
			</a></li><li class="cbi-tab"><a href="#" onclick="fBottomTabSelectAction('tabPortalAuthen');">
			Portal Authentication
			<%if (cmdElemValue[revCmdElemString["ApPortalEnable"]] == "true") then	%>
			<input id="ApPortalEnable" class="cbi-input-checkbox" type="checkbox" value="true" name="ApPortalEnable" checked="checked" onclick="fPortalEnable('ApPortalEnable');" style="height:15px;" />
			<%else	%>
			<input id="ApPortalEnable" class="cbi-input-checkbox" type="checkbox" value="true" name="ApPortalEnable" onclick="fPortalEnable('ApPortalEnable');" style="height:15px;" />
			<%end	%>
			</a></li><li class="cbi-tab"><a href="#" onclick="fBottomTabSelectAction('tabMACLimit');">
			MAC limit</a></li>
		</ul>
		<fieldset class="cbi-section-node cbi-section-node-tabbed">
			<div class="cbi-tabcontainer">
			<div id="tabGenSetup" style="border:1px solid #ccc;">
				<div class="cbi-value"><label class="cbi-value-title">ESSID :</label>
				<div class="cbi-value-field">
					<input id="ApESSID" type="text" name="ApESSID" value="<%=pcdata(cmdElemValue[revCmdElemString['ApESSID']])%>"  />
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">Hide SSID :</label>
				<div class="cbi-value-field">
					<%if (cmdElemValue[revCmdElemString["ApHideSSID"]] == "true") then	%>
					<input id="ApHideSSID" class="cbi-input-checkbox" type="checkbox" value="true" name="ApHideSSID" checked="checked" />
					<%else	%>
					<input id="ApHideSSID" class="cbi-input-checkbox" type="checkbox" value="true" name="ApHideSSID" />
					<%end	%>
				</div></div>

				<div class="cbi-value">
				<label class="cbi-value-title">
					TX (64kBps)
					<input id="ApRateLimitTX" type="text" name="ApRateLimitTX" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRateLimitTX']])%>" style="width:30%" />
				</label>
				<div class="cbi-value-field">
					RX (64kBps)
					<input id="ApRateLimitRX" type="text" name="ApRateLimitRX" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRateLimitRX']])%>" style="width:20%" />
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">VLAN ID :</label>
				<div class="cbi-value-field">
					<input id="ApVLANID" type="text" name="ApVLANID" value="<%=pcdata(cmdElemValue[revCmdElemString['ApVLANID']])%>" />
				</div></div>
				<div class="cbi-value">
				<label class="cbi-value-title">WDS Group:</label>
				<input type="text" id="ApWDSGroup" name="ApWDSGroup">
				</div>
				<div class="cbi-value">
				<label class="cbi-value-title" for="ApWDSRole">WDS Role:</label>
				<select id="ApWDSRole" name="ApWDSRole">
					<option value="0">AP</option>
					<option value="1">WDS Server</option>
					<option value="2">WDS Client</option>
					<option value="3">WDS Repeat Server</option>
					<option value="4">WDS Repeat Client</option>					
				</select>	
				</div>
				<div class="cbi-value">
				<label class="cbi-value-title" for="ApWDSParentBSSID">Parent BSSID:</label>
				<input type="text" id="ApWDSParentBSSID" name="ApWDSParentBSSID" />
				</div>
			</div></div>

			<div class="cbi-tabcontainer">
			<div id="tabWlSecurity" style="display:none;">
				<div class="cbi-value"><label class="cbi-value-title">Security Mode :</label>
				<div class="cbi-value-field">
					<select id="ApSecurityMode" name="ApSecurityMode" value="<%=pcdata(cmdElemValue[revCmdElemString['ApSecurityMode']])%>" onclick="fSecurityMode('ApSecurityMode',true);" >
					<option id="cbi-network-wan-proto-static" value="0">No Encryption</option>
					<option id="cbi-network-wan-proto-static" value="1">WPA-PSK</option>
					<option id="cbi-network-wan-proto-static" value="2">WPA2-PSK</option>
					<option id="cbi-network-wan-proto-static" value="3">WPA-PSK/WPA2-PSK Mixed mode</option>
					<option id="cbi-network-wan-proto-static" value="4">WPA-EAP</option>
					<option id="cbi-network-wan-proto-static" value="5">WPA2-EAP</option>
					</select>
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">Index/Cipher :</label>
				<div class="cbi-value-field">
					<select id="ApIndexCipher" name="ApIndexCipher" value="<%=pcdata(cmdElemValue[revCmdElemString['ApIndexCipher']])%>" >
					<option id="cbi-network-wan-proto-static" value="1">auto</option>
					<option id="cbi-network-wan-proto-static" value="2">Force CCMP(AES)</option>
					<option id="cbi-network-wan-proto-static" value="3">Forece TKIP</option>
					<option id="cbi-network-wan-proto-static" value="4">Force TKIP and CCMP(AES)</option>
					</select>
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">Key :</label>
				<div class="cbi-value-field">
					<input id="ApKey" type="text" name="ApKey" value="<%=pcdata(cmdElemValue[revCmdElemString['ApKey']])%>" />
				</div></div>
			</div></div>

			<div class="cbi-tabcontainer">
			<div id="tabRadiusServer" style="display:none;">
				<div class="cbi-value"><label class="cbi-value-title">Primary IP :</label>
				<div class="cbi-value-field">
					<input id="ApRadiusPrimaryIP" type="text" name="ApRadiusPrimaryIP" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRadiusPrimaryIP']])%>" />
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">Port :</label>
				<div class="cbi-value-field">
					<input id="ApRadiusPrimaryIPPort" type="text" name="ApRadiusPrimaryIPPort" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRadiusPrimaryIPPort']])%>" />
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">Key :</label>
				<div class="cbi-value-field">
					<input id="ApRadiusPrimaryIPKey" type="text" name="ApRadiusPrimaryIPKey" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRadiusPrimaryIPKey']])%>" />
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">Second IP :</label>
				<div class="cbi-value-field">
					<input id="ApRadiusSecondIP" type="text" name="ApRadiusSecondIP" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRadiusSecondIP']])%>" />
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">Port :</label>
				<div class="cbi-value-field">
					<input id="ApRadiusSecondIPPort" type="text" name="ApRadiusSecondIPPort" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRadiusSecondIPPort']])%>" />
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">Key :</label>
				<div class="cbi-value-field">
					<input id="ApRadiusSecondIPKey" type="text" name="ApRadiusSecondIPKey" value="<%=pcdata(cmdElemValue[revCmdElemString['ApRadiusSecondIPKey']])%>" />
				</div></div>
			</div></div>

			<div class="cbi-tabcontainer">
			<div id="tabPortalAuthen" style="display:none;">
				<!--
				<div class="cbi-value"><label class="cbi-value-title">Portal Enable :</label>
				<div class="cbi-value-field">
					<%if (cmdElemValue[revCmdElemString["ApPortalEnable"]] == "true") then	%>
					<input id="ApPortalEnable" class="cbi-input-checkbox" type="checkbox" value="true" name="ApPortalEnable" checked="checked" />
					<%else	%>
					<input id="ApPortalEnable" class="cbi-input-checkbox" type="checkbox" value="true" name="ApPortalEnable" />
					<%end	%>
				</div></div>
				-->

				<div class="cbi-value"><label class="cbi-value-title">Portal server IP :</label>
				<div class="cbi-value-field">
					<input id="ApPortalServerIP" type="text" name="PortalServerIP" value="<%=pcdata(cmdElemValue[revCmdElemString['ApPortalServerIP']])%>"  />
				</div></div>

				<div class="cbi-value"><label class="cbi-value-title">Portal server Port :</label>
				<div class="cbi-value-field">
					<input id="ApPortalServerPort" type="text" name="ApPortalServerPort" value="<%=pcdata(cmdElemValue[revCmdElemString['ApPortalServerPort']])%>"  />
				</div></div>
			</div></div>

			<div class="cbi-tabcontainer">
			<div id="tabMACLimit" style="display:none;">
				<fieldset class="cbi-section">
				<legend>Select and upload MAC limit file then refresh.</legend>
					<div style="height:20px;margin-left:60%;vertical-align:middle;">
						<select id="ApMacLimitOption" name="ApMacLimitOption" value="<%=pcdata(cmdElemValue[revCmdElemString['ApMacLimitOption']])%>" style="font-size:11px;width:130px;" onclick="" >
						<option value="0">disable</option>
						<option value="1">Allow listed only</option>
						<option value="2">Allow all except listed</option>
						</select>

						<input id="ApMacLimitRefresh"  onclick="funMacLimitFileRefreshAjax();" type="button" style="font-size:11px;width:50px;" value="Refresh" />
					</div>
				</fieldset>

				<input id="ApMacLimitList" type="hidden" name="ApMacLimitList" value="" />

				<fieldset class="cbi-section">
				<legend>MAC Address List</legend>
					<div class="tabSSIDSetting" style="width:auto;overflow-x:none;">	
					<table class="cbi-section-table" >
					<tbody id="idtabMacAddressList">
						<!--	
						<tr>
							<td >ESSID</td>
							<td >Hide SSID</td>
							<td >VLAN ID</td>
							<td >Security Mode</td>
							<td >Index/Cipher</td>
							<td >Key</td>
							<td >Portal Enable</td>
						</tr>
						-->
					</tbody>
					</table>
					</div>
				</fieldset>
			</div></div>
		</fieldset>
		</fieldset>

	</fieldset>
	</div>
</div>
	
<div style="text-align:right;">
	<input class="cbi-button cbi-button-save" style="height:20px;" type="submit" value="Save" onclick="funApConfigApplay();"/>
</div>
</form>


<iframe name="uploadframe" style="display:none;"></iframe>
<form id="update" name="update" action="<%=controller%>/admin/ViaView/Profile" method="post" enctype="multipart/form-data" target="uploadframe" >
	<input type="hidden" name="act" value="update" />
	<input id="UploadFWStatus" type="hidden" name="UploadFWStatus" value="<%=pcdata(strUploadFWStatus)%>" />
	<div id="idFileUpload" style="position:absolute;bottom:121px;margin-bottom:6em;left:4em;display:none;">
		<input type="file" id="targetFile" style="font-size:11px;width:300px;" name="File" value="File" />
		<input type="submit" id="updateBtn" style="font-size:11px;width:50px;float:none;" value="Submit" />
	</div>
</form>

<script type="text/javascript" src="<%=resource%>/script/common.js"></script>
<script type="text/javascript">
//<![CDATA[
var tabTopSelectItemId = "tabBaseInfo";
var varTabSSIDListSelectIndex = 1;
var my_global={}
my_global.wds=false;
<% if (iswds) then %>my_global.wds=true;<%end%>
function restoreWDSConfig(iswds) {
	var g5Ebl=document.getElementById("Ap5GEnable");
	var g5htmode=document.getElementById("ApHTMode5G");
	var g5channel=document.getElementById("ApChannel5G");	
	if(iswds) {
		g5Ebl.disabled=false;
		g5htmode.disabled=false;
		g5channel.disabled=false;
	}
}
function funtabSSIDSettinglistCreate()
{
	var elemSSIDList=document.getElementById('idtabSSIDSettingList');
	var row;
	var cell;
	var head;
	for(var i=0;i<8;i++) {
		row=document.createElement('tr');
		elemSSIDList.appendChild(row);
		//row=elemSSIDList.insertRow(-1);
		//head=document.createElement('th');
		//row.appendChild(head);
		//head.innerHTML=i*3+1;

		for(var j=0;j<8;j++) {
			cell=document.createElement('td');
			cell.onclick=function(e){tabOnclick(e)};
			row.appendChild(cell);
		}
	}
}
funtabSSIDSettinglistCreate();
function funtabSSIDSettinglistClear()
{
	var elemSSIDList=document.getElementById('idtabSSIDSettingList');
	var row;
	var cell;
	for(var i=1;i<9;i++) {
		row=elemSSIDList.rows[i]
		for(var j=0;j<8;j++) {
			row.cells[j].innerHTML = "";
		}
	}
}
function funtabSSIDSettinglistColorClear()
{
	var elemSSIDList=document.getElementById("idtabSSIDSettingList");
	for(var i=1;i<9;i++) {
		elemSSIDList.rows[i].style.backgroundColor="white";
	}
}
function tabOnclick(e)
{
	var ent=e||window.event;
	var obj=ent.target||ent.srcElement;
	//alert(obj.parentNode.rowIndex);
	if (obj.parentNode.cells[0].innerHTML == "")
	{
		return ;
	}
	if (obj.parentNode.style.backgroundColor != "gray")
	{
		funtabSSIDSettinglistColorClear();
		obj.parentNode.style.backgroundColor="gray";
	}
	else
	{
		funtabSSIDSettinglistColorClear();
	}

	varTabSSIDListSelectIndex = obj.parentNode.rowIndex;
	//funtabSSIDSettinglistItemClear();
	fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
}
function funtabSSIDSettinglistItemClear()
{
	funtabSSIDSettinglistClear();
	funtabMacAddresslistClear();

	document.getElementById("ApESSID").value="";
	document.getElementById("ApRateLimitTX").value="";
	document.getElementById("ApRateLimitRX").value="";
	document.getElementById("ApVLANID").value="";
	document.getElementById("ApHideSSID").checked=false;
	document.getElementById("ApWDSGroup").value='';
	document.getElementById("ApWDSRole").selectedIndex=0;
	document.getElementById("ApWDSParentBSSID").value='';
	document.getElementById("ApSecurityMode").value="0";
	document.getElementById("ApIndexCipher").value="1";
	document.getElementById("ApKey").value="";
	document.getElementById("ApRadiusPrimaryIP").value="";
	document.getElementById("ApRadiusPrimaryIPPort").value="";
	document.getElementById("ApRadiusPrimaryIPKey").value="";
	document.getElementById("ApRadiusSecondIP").value="";
	document.getElementById("ApRadiusSecondIPPort").value="";
	document.getElementById("ApRadiusSecondIPKey").value="";
	document.getElementById("ApPortalEnable").checked=false;
	document.getElementById("ApPortalServerIP").value="";
	document.getElementById("ApPortalServerPort").value="";
	document.getElementById("ApMacLimitList").value="";
	//fBottomTabSelectAction('tabGenSetup');
}

function funtabMacAddresslistCreate()
{
	var elemMacAddList=document.getElementById('idtabMacAddressList');
	var row;
	var cell;
	var head;
	for(var i=0;i<400;i++) {
		row=document.createElement('tr');
		elemMacAddList.appendChild(row);
		head=document.createElement('th');
		head.style.width="30px";
		row.appendChild(head);
		head.innerHTML=i*5+1;

		for(var j=0;j<5;j++) {
			cell=document.createElement('td');
			//cell.onclick=function(e){tabOnclick(e)};
			row.appendChild(cell);
		}
	}
}
funtabMacAddresslistCreate();
function funtabMacAddresslistClear()
{
	var elemMacAddList=document.getElementById('idtabMacAddressList');
	var row;
	var cell;
	for(var i=0;i<400;i++) {
		row=elemMacAddList.rows[i]
		for(var j=1;j<6;j++) {
			row.cells[j].innerHTML = "";
		}
	}
}
function fMacAddressListUpdate(MacLimitValue)
{
	//Step 1. parse Mac Address list to each Mac address
	var strTmp = MacLimitValue;
	var MacAddrNum = 1;
	var MacAddrArray = new Array();
	while (strTmp.indexOf(",") != -1)
	{
		MacAddrArray[MacAddrNum] = strTmp.substring(0,strTmp.indexOf(","));
		strTmp = strTmp.substring(strTmp.indexOf(",")+1);
		MacAddrNum = MacAddrNum + 1;
	}

	//Step 2. set the MacAddress to table show
	var elemMacAddList=document.getElementById('idtabMacAddressList');
	for (var i=1; i<MacAddrNum; i++)
	{
		elemMacAddList.rows[Math.floor((i-1)/5)].cells[(i-1)%5 + 1].innerHTML=MacAddrArray[i];
	}
}

function validate_scanInterval(field,alerttxt)
{
	with (field) {
		if(!ApScanStatus.checked) {
			return true;
		}
		if(value == ""||isNaN(value)) {
			field.focus();
			alert('Scan Interval must be a numeric');
			return false;
		}
		i = parseInt(field.value);
		if(i < 5 || i > 65535) {
			field.focus();
			alert(alerttxt);
			return false
		} else {
			return true;
		}
	}
}

function validate_form(thisform)
{
	with (thisform) {
		var varEnable;
		var chkStatus;
		var elemValue;
		//Basic information checking
		varEnable = document.getElementById("ApDhcpEnable");
		chkStatus = varEnable.checked;
		if (!chkStatus)
		{
			if (!validate_ipAddress(document.getElementById("ApIpAddress")," IP address invalid")||
			!validate_ipAddress(document.getElementById("ApNetmask"), "netmask is not valid")||
			!validate_ipAddress(document.getElementById("ApGateway"), "gateway is not valid")) 
			{
				return false;
			}
		}
		varEnable = document.getElementById("ApScanStatus");
		chkStatus = varEnable.checked;
		if (chkStatus)
		{
			if (!validate_scanInterval(document.getElementById("ApScanInterval"), "Scan Interval must in range 5-65535")) 
			{
				return false;
			}
		}

		//11bgn parameters checking
		varEnable = document.getElementById("Ap2.4GEnable");
		chkStatus = varEnable.checked;
		if(chkStatus) {
			if(!validate_unsignedInt("ApClientNumber2.4G", "client number must be a number greater than 0")||
				!validate_unsignedInt("ApFragmentation2.4G", "fragmentation must be a number greater than 0")||
				!validate_unsignedInt("ApRTSCTS2.4G", "rts/cts must be a number greater than 0")) {
				return false;
			}
			elemValue = document.getElementById("ApClientNumber2.4G").value;
			if (elemValue > 200)
			{
				alert("Client Number must less than 200");
				return false;
			}
		}
		
		//11an parameters checking
		varEnable = document.getElementById("Ap5GEnable");
		chkStatus = varEnable.checked;
		if(chkStatus) {
			if(!validate_unsignedInt("ApClientNumber5G", "client number must be a number greater than 0")||
				!validate_unsignedInt("ApFragmentation5G", "fragmentation must be a number greater than 0")||
				!validate_unsignedInt("ApRTSCTS5G", "rts/cts must be a number greater than 0")) {
				return false;
			}
			elemValue = document.getElementById("ApClientNumber5G").value;
			if (elemValue > 200)
			{
				alert("Client Number must less than 200");
				return false;
			}
		}

	}
}
function validate_SSID()
{
	//multiple SSID input value check, Security mode is EAP check primary and secondary IP and port
	if (document.getElementById("ApESSID").disabled == false)
	{	
		if (document.getElementById("ApESSID").value != "")
		{
			var elemSecurityModeValue;
			elemSecurityModeValue = document.getElementById("ApSecurityMode").value;
			if(elemSecurityModeValue == "4" || elemSecurityModeValue == "5")
			{
				if(!validate_ipAddress(document.getElementById("ApRadiusPrimaryIP"),"IP address invalid")||
					!validate_ipAddress(document.getElementById("ApRadiusSecondIP"),"IP address invalid")||
					!validate_unsignedInt("ApRadiusPrimaryIPPort","port must be a number")||
					!validate_unsignedInt("ApRadiusSecondIPPort", "port must be a number"))
				{
					fBottomTabSelectAction('tabRadiusServer');
					return false;
				}
				else
				{
				}
			}
			if (document.getElementById("ApPortalEnable").checked)
			{
				if(!validate_ipAddress(document.getElementById("ApPortalServerIP"),"IP address invalid")||
					!validate_unsignedInt("ApPortalServerPort","port must be a number"))
				{
					fBottomTabSelectAction('tabPortalAuthen');
					return false;
				}
			}
		}
		else
		{
			alert("ESSID name is null");
			return false;
		}
	}
	else
	{
		alert("SSID content edit is disable");
		return false;
	}
}
function fTopTabSelectAction(id)
{
	document.getElementById('tabBaseInfo').style.display='none';
	document.getElementById('tab24GConfig').style.display='none';
	document.getElementById('tab5GConfig').style.display='none';
	document.getElementById(id).style.display='block';
	if (id == "tabBaseInfo")
	{
		tabTopSelectItemId = "tabBaseInfo";
		document.getElementById('tabInterfaceConfig').style.display='none';
		document.getElementById('idFileUpload').style.display='none';
	}
	else if (id == "tab24GConfig")
	{
		tabTopSelectItemId = "tab24GConfig";
		document.getElementById('tabInterfaceConfig').style.display='block';
		//funtabSSIDSettinglistItemClear();
		funtabSSIDSettinglistColorClear();
		varTabSSIDListSelectIndex = 1;
		fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
		f24G5GEnable("Ap2.4GEnable");
		fBottomTabSelectAction('tabGenSetup');
	}
	else if (id == "tab5GConfig")
	{
		tabTopSelectItemId = "tab5GConfig";
		document.getElementById('tabInterfaceConfig').style.display='block';
		//funtabSSIDSettinglistItemClear();
		funtabSSIDSettinglistColorClear();
		varTabSSIDListSelectIndex = 1;
		fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
		f24G5GEnable("Ap5GEnable");
		fBottomTabSelectAction('tabGenSetup');
	}
}
function fBottomTabSelectAction(id)
{
	document.getElementById('tabGenSetup').style.display='none';
	document.getElementById('tabWlSecurity').style.display='none';
	document.getElementById('tabPortalAuthen').style.display='none';
	document.getElementById('tabRadiusServer').style.display='none';
	document.getElementById('tabMACLimit').style.display='none';
	document.getElementById('idFileUpload').style.display='none';

	document.getElementById(id).style.display='block';
	if (id == "tabMACLimit")
	{
		document.getElementById('idFileUpload').style.display='block';
	}
}

function fDhcpEnable(arg)
{
	var dhcp_ebl=document.getElementById(arg);
	var status=dhcp_ebl.checked;
	if(arg == "ApDhcpEnable")
	{
		if(status) 
		{
			document.getElementById("ApIpAddress").disabled=true;
			document.getElementById("ApNetmask").disabled=true;
			document.getElementById("ApGateway").disabled=true;
		}
		else
		{
			document.getElementById("ApIpAddress").disabled=false;
			// document.getElementById("dhcp_IPAdd").setAttribute('disabled',false);
			document.getElementById("ApNetmask").disabled=false;
			document.getElementById("ApGateway").disabled=false;
		}
	}
	else if(arg == "ApScanStatus")
	{
		if(status) 
		{
			document.getElementById("ApScanInterval").disabled=false;
		}
		else
		{
			document.getElementById("ApScanInterval").disabled=true;
		}
	}
}

function fSSIDListEnable(enable)
{
	if (enable==true)
	{
		document.getElementById("ApESSID").disabled=false;
		document.getElementById("ApRateLimitTX").disabled=false;
		document.getElementById("ApRateLimitRX").disabled=false;
		document.getElementById("ApVLANID").disabled=false;
		document.getElementById("ApHideSSID").disabled=false;
		document.getElementById("ApWDSGroup").disabled=false;
		document.getElementById("ApWDSRole").disabled=false;
		document.getElementById("ApWDSParentBSSID").disabled=false;
		fSecurityMode('ApSecurityMode',true);

		document.getElementById("ApPortalEnable").disabled=false;
		fPortalEnable("ApPortalEnable");

		document.getElementById("ApMacLimitOption").disabled=false;
		document.getElementById("ApMacLimitRefresh").disabled=false;
	}
	else
	{
		document.getElementById("ApESSID").disabled=true;
		document.getElementById("ApRateLimitTX").disabled=true;
		document.getElementById("ApRateLimitRX").disabled=true;
		document.getElementById("ApVLANID").disabled=true;
		document.getElementById("ApHideSSID").disabled=true;
		document.getElementById("ApWDSGroup").disabled=true;
		document.getElementById("ApWDSRole").disabled=true;
		document.getElementById("ApWDSParentBSSID").disabled=true;
		fSecurityMode("ApSecurityMode",false);

		document.getElementById("ApPortalEnable").disabled=true;
		document.getElementById("ApPortalServerIP").disabled=true;
		document.getElementById("ApPortalServerPort").disabled=true;

		document.getElementById("ApMacLimitOption").disabled=true;
		document.getElementById("ApMacLimitRefresh").disabled=true;
	}
}

function fPortalEnable(id)
{
	var varEnable=document.getElementById(id);
	var chkStatus=varEnable.checked;
	if (chkStatus)
	{
		document.getElementById("ApPortalServerIP").disabled=false;
		document.getElementById("ApPortalServerPort").disabled=false;
		fSecurityMode("ApSecurityMode",false);
	}
	else
	{
		document.getElementById("ApPortalServerIP").disabled=true;
		document.getElementById("ApPortalServerPort").disabled=true;
		document.getElementById("ApPortalServerIP").value="";
		document.getElementById("ApPortalServerPort").value="";
		fSecurityMode('ApSecurityMode',true);
	}
}

function f24G5GEnable(arg)
{
	var varEnable=document.getElementById(arg);
	var chkStatus=varEnable.checked;
	if (arg == "Ap2.4GEnable")
	{
		if(chkStatus)
		{
			document.getElementById("ApClientNumber2.4G").disabled=false;
			document.getElementById("ApHTMode2.4G").disabled=false;
			document.getElementById("ApTransmitPower2.4G").disabled=false;
			document.getElementById("ApMode2.4G").disabled=false;
			document.getElementById("ApChannel2.4G").disabled=false;
			document.getElementById("ApFragmentation2.4G").disabled=false;
			document.getElementById("ApRTSCTS2.4G").disabled=false;
			fSSIDListEnable(true);
		}
		else
		{
			document.getElementById("ApClientNumber2.4G").disabled=true;
			document.getElementById("ApHTMode2.4G").disabled=true;
			document.getElementById("ApTransmitPower2.4G").disabled=true;
			document.getElementById("ApMode2.4G").disabled=true;
			document.getElementById("ApChannel2.4G").disabled=true;
			document.getElementById("ApFragmentation2.4G").disabled=true;
			document.getElementById("ApRTSCTS2.4G").disabled=true;
			fSSIDListEnable(false);
		}
	}
	else if (arg == "Ap5GEnable")
	{
		if(chkStatus)
		{
			document.getElementById("ApClientNumber5G").disabled=false;
			if(!my_global.wds)
				document.getElementById("ApHTMode5G").disabled=false; 
			document.getElementById("ApTransmitPower5G").disabled=false;
			document.getElementById("ApMode5G").disabled=false;
			if(!my_global.wds)
				document.getElementById("ApChannel5G").disabled=false;
			document.getElementById("ApFragmentation5G").disabled=false;
			document.getElementById("ApRTSCTS5G").disabled=false;
			fSSIDListEnable(true);
		}
		else
		{
			document.getElementById("ApClientNumber5G").disabled=true;
			document.getElementById("ApHTMode5G").disabled=true;
			document.getElementById("ApTransmitPower5G").disabled=true;
			document.getElementById("ApMode5G").disabled=true;
			document.getElementById("ApChannel5G").disabled=true;
			document.getElementById("ApFragmentation5G").disabled=true;
			document.getElementById("ApRTSCTS5G").disabled=true;
			fSSIDListEnable(false);
		}
		if(my_global.wds) {
			document.getElementById("ApESSID").disabled=true;
			fSecurityMode("ApSecurityMode",false);
			document.getElementById("ApPortalEnable").disabled=true;
		}
	}
}

function fSecurityMode(id, enable)
{
	var securityModeSe=document.getElementById(id);
	var seValue=securityModeSe.value;

	if (enable == true)
	{
		if (seValue == "0")
		{
			document.getElementById("ApSecurityMode").disabled=false;
			document.getElementById("ApIndexCipher").disabled=true;
			document.getElementById("ApKey").disabled=true;
			document.getElementById("ApRadiusPrimaryIP").disabled=true;
			document.getElementById("ApRadiusPrimaryIPPort").disabled=true;
			document.getElementById("ApRadiusPrimaryIPKey").disabled=true;
			document.getElementById("ApRadiusSecondIP").disabled=true;
			document.getElementById("ApRadiusSecondIPPort").disabled=true;
			document.getElementById("ApRadiusSecondIPKey").disabled=true;
			document.getElementById("ApIndexCipher").value=1;
			document.getElementById("ApKey").value="";
			document.getElementById("ApRadiusPrimaryIP").value="";
			document.getElementById("ApRadiusPrimaryIPPort").value="";
			document.getElementById("ApRadiusPrimaryIPKey").value="";
			document.getElementById("ApRadiusSecondIP").value="";
			document.getElementById("ApRadiusSecondIPPort").value="";
			document.getElementById("ApRadiusSecondIPKey").value="";
		}
		else if (seValue == "1"||seValue == "2"||seValue == "3")
		{

			document.getElementById("ApSecurityMode").disabled=false;
			document.getElementById("ApIndexCipher").disabled=false;
			document.getElementById("ApKey").disabled=false;			
			document.getElementById("ApRadiusPrimaryIP").disabled=true;
			document.getElementById("ApRadiusPrimaryIPPort").disabled=true;
			document.getElementById("ApRadiusPrimaryIPKey").disabled=true;
			document.getElementById("ApRadiusSecondIP").disabled=true;
			document.getElementById("ApRadiusSecondIPPort").disabled=true;
			document.getElementById("ApRadiusSecondIPKey").disabled=true;
			document.getElementById("ApRadiusPrimaryIP").value="";
			document.getElementById("ApRadiusPrimaryIPPort").value="";
			document.getElementById("ApRadiusPrimaryIPKey").value="";
			document.getElementById("ApRadiusSecondIP").value="";
			document.getElementById("ApRadiusSecondIPPort").value="";
			document.getElementById("ApRadiusSecondIPKey").value="";
		}
		else if (seValue == "4"||seValue == "5")
		{
			document.getElementById("ApSecurityMode").disabled=false;
			document.getElementById("ApIndexCipher").disabled=false;
			document.getElementById("ApKey").disabled=true;
			document.getElementById("ApKey").value="";
			//console.log('ok');
			document.getElementById("ApRadiusPrimaryIP").disabled=false;
			document.getElementById("ApRadiusPrimaryIPPort").disabled=false;
			document.getElementById("ApRadiusPrimaryIPKey").disabled=false;
			document.getElementById("ApRadiusSecondIP").disabled=false;
			document.getElementById("ApRadiusSecondIPPort").disabled=false;
			document.getElementById("ApRadiusSecondIPKey").disabled=false;
		}
	}
	else
	{
		//disable wifi encryption
		document.getElementById("ApSecurityMode").disabled=true;
		document.getElementById("ApIndexCipher").disabled=true;
		document.getElementById("ApKey").disabled=true;
		document.getElementById("ApRadiusPrimaryIP").disabled=true;
		document.getElementById("ApRadiusPrimaryIPPort").disabled=true;
		document.getElementById("ApRadiusPrimaryIPKey").disabled=true;
		document.getElementById("ApRadiusSecondIP").disabled=true;
		document.getElementById("ApRadiusSecondIPPort").disabled=true;
		document.getElementById("ApRadiusSecondIPKey").disabled=true;
		//set encryption content to null
		if(!my_global.wds)
			document.getElementById("ApSecurityMode").value=0;
		if(!my_global.wds)
			document.getElementById("ApIndexCipher").value=1;
		if(!my_global.wds)
			document.getElementById("ApKey").value="";
		document.getElementById("ApRadiusPrimaryIP").value="";
		document.getElementById("ApRadiusPrimaryIPPort").value="";
		document.getElementById("ApRadiusPrimaryIPKey").value="";
		document.getElementById("ApRadiusSecondIP").value="";
		document.getElementById("ApRadiusSecondIPPort").value="";
		document.getElementById("ApRadiusSecondIPKey").value="";
	}

}

function fSetSelectItem()
{
	var x;
	x = document.getElementById("ApHTMode2.4G");
	<% if (cmdElemValue[revCmdElemString["ApHTMode2.4G"]]) then%>
	//x.selectedIndex = <%=pcdata(cmdElemValue[revCmdElemString["ApHTMode2.4G"]])%>;
	x.value = <%=pcdata(cmdElemValue[revCmdElemString["ApHTMode2.4G"]])%>;
	<% end %>
	x = document.getElementById("ApTransmitPower2.4G");
	<% if (cmdElemValue[revCmdElemString["ApTransmitPower2.4G"]]) then%>
	x.value = <%=pcdata(cmdElemValue[revCmdElemString["ApTransmitPower2.4G"]])%>;
	<% end %>
	x = document.getElementById("ApMode2.4G");
	<% if (cmdElemValue[revCmdElemString["ApMode2.4G"]]) then%>
	x.value = <%=pcdata(cmdElemValue[revCmdElemString["ApMode2.4G"]])%>;
	<% end %>
	x = document.getElementById("ApChannel2.4G");
	<% if (cmdElemValue[revCmdElemString["ApChannel2.4G"]]) then%>
	x.value = <%=pcdata(cmdElemValue[revCmdElemString["ApChannel2.4G"]])%>;
	<% end %>

	x = document.getElementById("ApHTMode5G");
	<% if (cmdElemValue[revCmdElemString["ApHTMode5G"]]) then%>
	x.value = <%=pcdata(cmdElemValue[revCmdElemString["ApHTMode5G"]])%>;
	<% end %>
	x = document.getElementById("ApTransmitPower5G");
	<% if (cmdElemValue[revCmdElemString["ApTransmitPower5G"]]) then%>
	x.value = <%=pcdata(cmdElemValue[revCmdElemString["ApTransmitPower5G"]])%>;
	<% end %>
	x = document.getElementById("ApMode5G");
	<% if (cmdElemValue[revCmdElemString["ApMode5G"]]) then%>
	x.value = <%=pcdata(cmdElemValue[revCmdElemString["ApMode5G"]])%>;
	<% end %>
	x = document.getElementById("ApChannel5G");
	<% if (cmdElemValue[revCmdElemString["ApChannel5G"]]) then%>
	x.value = <%=pcdata(cmdElemValue[revCmdElemString["ApChannel5G"]])%>;
	<% end %>
}

fSetSelectItem();
fDhcpEnable("ApDhcpEnable");
fDhcpEnable("ApScanStatus");
f24G5GEnable("Ap2.4GEnable");
f24G5GEnable("Ap5GEnable");

var varSSIDList24GItemArray = new Array();
var varSSIDList5GItemArray = new Array();
var varSSIDList24GIdx = <%=pcdata(SSIDList24GIdx)%>;
var varSSIDList5GIdx = <%=pcdata(SSIDList5GIdx)%>;
var varstrSecurityMode = new Array();
varstrSecurityMode[0] = "No Encryption";
varstrSecurityMode[1] = "WPA-PSK";
varstrSecurityMode[2] = "WPA2-PSK";
varstrSecurityMode[3] = "WPA-PSK/WPA2-PSK Mixed mode";
varstrSecurityMode[4] = "WPA-EAP";
varstrSecurityMode[5] = "WPA2-EAP";
var varstrIndexCipher = new Array();
varstrIndexCipher[1] = "auto";
varstrIndexCipher[2] = "Force CCMP(AES)";
varstrIndexCipher[3] = "Forece TKIP";
varstrIndexCipher[4] = "Force TKIP and CCMP(AES)";
(function(){
	var btnSave=document.getElementsByTagName('form')[0],
		ent_submit=btnSave.onsubmit;
		if(typeof ent_submit === 'function') {
			btnSave.onsubmit=function() {
				if(ent_submit() === undefined) {
					restoreWDSConfig(my_global.wds);	
					//return false;				
				}
				else 
					return false;
			}
		}
})();
function fSSIDListItemDataSave()
{

	for (var i = 1; i < 9; i++)
	{
		varSSIDList24GItemArray[i] = new Array();
		varSSIDList5GItemArray[i] = new Array();
	}

	//get data from lua receive command 
	<% 
	local i = 1
	while i < SSIDList24GIdx do
		index = revCmdElemString["ApESSID"]
		while index <= #cmdElemString do
	%>
		varSSIDList24GItemArray[<%=pcdata(i)%>][<%=pcdata(index)%>]="<%=pcdata(SSIDList24GItemArray[i][index])%>";
	<% 
		index = index+1
		end
		i=i+1 
	end
	%>

	<% 
	local i = 1
	while i < SSIDList5GIdx do
		index = revCmdElemString["ApESSID"]
		while index <= #cmdElemString do
	%>
		varSSIDList5GItemArray[<%=pcdata(i)%>][<%=pcdata(index)%>]="<%=pcdata(SSIDList5GItemArray[i][index])%>";

	<%
		index = index+1
		end
		i=i+1
	end
	%>

}
fSSIDListItemDataSave();

function fSSIDListDataUpdate(id,vIndx)
{
	var wdsgroup=document.getElementById("ApWDSGroup"),
		wdsrole=document.getElementById("ApWDSRole"),
		bssid=document.getElementById("ApWDSParentBSSID");
	funtabSSIDSettinglistItemClear();
	if (id == "tab24GConfig" && vIndx < varSSIDList24GIdx)
	{
		for (var i = 1; i < varSSIDList24GIdx; i++)
		{
		var elemSSIDList=document.getElementById("idtabSSIDSettingList");
		//for(var j=0;j<6;j++) {
		//	elemSSIDList.rows[i].cells[j].innerHTML=varSSIDList24GItemArray[i][<%=pcdata(25)%>+j];
		//}
		elemSSIDList.rows[i].cells[0].innerHTML=varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["ApESSID"])%>];
		elemSSIDList.rows[i].cells[1].innerHTML=varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["APBSSID"])%>];
		elemSSIDList.rows[i].cells[2].innerHTML=varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["ApHideSSID"])%>];
		elemSSIDList.rows[i].cells[3].innerHTML=varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["ApVLANID"])%>];
		if (varstrSecurityMode[varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["ApSecurityMode"])%>]])
		{
			elemSSIDList.rows[i].cells[4].innerHTML=varstrSecurityMode[varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["ApSecurityMode"])%>]];
		}
		if (varstrIndexCipher[varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["ApIndexCipher"])%>]])
		{
			elemSSIDList.rows[i].cells[5].innerHTML=varstrIndexCipher[varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["ApIndexCipher"])%>]]
		}
		elemSSIDList.rows[i].cells[6].innerHTML=varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["ApKey"])%>];
		elemSSIDList.rows[i].cells[7].innerHTML=varSSIDList24GItemArray[i][<%=pcdata(revCmdElemString["ApPortalEnable"])%>];
		}
		<% 
			index = revCmdElemString["ApESSID"]
			while index <= revCmdElemString["ApMacLimitList"] do
				if (index ~= 26) then
		%>
				if (varSSIDList24GItemArray[vIndx][<%=pcdata(index)%>])
				{
				document.getElementById("<%=pcdata(cmdElemString[index])%>").value=varSSIDList24GItemArray[vIndx][<%=pcdata(index)%>];
				}
		<%
				end
			index = index+1
			end
		%>
		//set check box item status (ApHideSSID and RadiusServerEnable)
		if (varSSIDList24GItemArray[vIndx][<%=pcdata(revCmdElemString["ApHideSSID"])%>] == "true")
		{
			document.getElementById("ApHideSSID").checked=true;
		}
		else
		{
			document.getElementById("ApHideSSID").checked=false;
		}
		if (varSSIDList24GItemArray[vIndx][<%=pcdata(revCmdElemString["ApPortalEnable"])%>] == "true")
		{
			document.getElementById("ApPortalEnable").checked=true;
		}
		else
		{
			document.getElementById("ApPortalEnable").checked=false;
		}
		//for wds setting
		if (varSSIDList24GItemArray[vIndx][<%=pcdata(revCmdElemString["ApWDSGroup"])%>]) {
			wdsgroup.value=varSSIDList24GItemArray[vIndx][<%=pcdata(revCmdElemString["ApWDSGroup"])%>];	
			wdsrole.selectedIndex=varSSIDList24GItemArray[vIndx][<%=revCmdElemString["ApWDSRole"]%>]-1;
			bssid.value=varSSIDList24GItemArray[vIndx][<%=revCmdElemString["ApWDSParentBSSID"]%>];
		}

		fMacAddressListUpdate(document.getElementById("ApMacLimitList").value);
	}
	else if (id == "tab5GConfig" && vIndx < varSSIDList5GIdx)
	{
		for (var i = 1; i < varSSIDList5GIdx; i++)
		{
		var elemSSIDList=document.getElementById("idtabSSIDSettingList");
		elemSSIDList.rows[i].cells[0].innerHTML=varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["ApESSID"])%>];
		elemSSIDList.rows[i].cells[1].innerHTML=varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["APBSSID"])%>];
		elemSSIDList.rows[i].cells[2].innerHTML=varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["ApHideSSID"])%>];
		elemSSIDList.rows[i].cells[3].innerHTML=varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["ApVLANID"])%>];
		if (varstrSecurityMode[varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["ApSecurityMode"])%>]])
		{
			elemSSIDList.rows[i].cells[4].innerHTML=varstrSecurityMode[varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["ApSecurityMode"])%>]];
		}
		if (varstrIndexCipher[varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["ApIndexCipher"])%>]])
		{
			elemSSIDList.rows[i].cells[5].innerHTML=varstrIndexCipher[varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["ApIndexCipher"])%>]];
		}
		elemSSIDList.rows[i].cells[6].innerHTML=varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["ApKey"])%>];
		elemSSIDList.rows[i].cells[7].innerHTML=varSSIDList5GItemArray[i][<%=pcdata(revCmdElemString["ApPortalEnable"])%>];
		}
		<% 
			index = revCmdElemString["ApESSID"]
			while index <= revCmdElemString["ApMacLimitList"] do
				if (index ~= 26) then
		%>
				if (varSSIDList5GItemArray[vIndx][<%=pcdata(index)%>])
				{
				document.getElementById("<%=pcdata(cmdElemString[index])%>").value=varSSIDList5GItemArray[vIndx][<%=pcdata(index)%>];
				}
		<%
				end
			index = index+1
			end
		%>
		//set check box item status (ApHideSSID and RadiusServerEnable)
		if (varSSIDList5GItemArray[vIndx][<%=pcdata(revCmdElemString["ApHideSSID"])%>] == "true")
		{
			document.getElementById("ApHideSSID").checked=true;
		}
		else
		{
			document.getElementById("ApHideSSID").checked=false;
		}
		if (varSSIDList5GItemArray[vIndx][<%=pcdata(revCmdElemString["ApPortalEnable"])%>] == "true")
		{
			document.getElementById("ApPortalEnable").checked=true;
		}
		else
		{
			document.getElementById("ApPortalEnable").checked=false;
		}
		if (varSSIDList5GItemArray[vIndx][<%=pcdata(revCmdElemString["ApWDSGroup"])%>]) {
			wdsgroup.value=varSSIDList5GItemArray[vIndx][<%=pcdata(revCmdElemString["ApWDSGroup"])%>];	
			wdsrole.selectedIndex=varSSIDList5GItemArray[vIndx][<%=revCmdElemString["ApWDSRole"]%>]-1;
			bssid.value=varSSIDList5GItemArray[vIndx][<%=revCmdElemString["ApWDSParentBSSID"]%>];
		}
		fMacAddressListUpdate(document.getElementById("ApMacLimitList").value);
	}
	fPortalEnable("ApPortalEnable");

}
function fSSIDListAdd()
{
	var role=document.getElementById('ApWDSRole');
	if (validate_SSID() == false)
	{
		return false;
	}

	if (tabTopSelectItemId == "tab24GConfig")
	{
		if (varSSIDList24GIdx >= 9)
		{
			alert("only support less then 8 SSIDs set");
			return ;
		}
		<%
		index = revCmdElemString["ApESSID"]
		while index <= #cmdElemString do
			if (index ~=26) then 
		%>
			varSSIDList24GItemArray[varSSIDList24GIdx][<%=pcdata(index)%>]=document.getElementById("<%=pcdata(cmdElemString[index])%>").value||'';
		<% 
			end
		index = index+1
		end
		%>
		varSSIDList24GItemArray[varSSIDList24GIdx][26]='';
		if (document.getElementById("ApHideSSID").checked == false)
		{
			varSSIDList24GItemArray[varSSIDList24GIdx][<%=pcdata(revCmdElemString["ApHideSSID"])%>]="false";
		}
		else
		{
			varSSIDList24GItemArray[varSSIDList24GIdx][<%=pcdata(revCmdElemString["ApHideSSID"])%>]="true";
		}
		if (document.getElementById("ApPortalEnable").checked == false)
		{
			varSSIDList24GItemArray[varSSIDList24GIdx][<%=pcdata(revCmdElemString["ApPortalEnable"])%>]="false";
		}
		else
		{
			varSSIDList24GItemArray[varSSIDList24GIdx][<%=pcdata(revCmdElemString["ApPortalEnable"])%>]="true";
		}
		//wds repeat mode
		varSSIDList24GItemArray[varSSIDList24GIdx][<%=pcdata(revCmdElemString["ApWDSRole"])%>]=role.selectedIndex+1;
	
		varTabSSIDListSelectIndex = varSSIDList24GIdx;
		varSSIDList24GIdx = varSSIDList24GIdx+1;
		fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
	}
	else if (tabTopSelectItemId == "tab5GConfig")
	{
		if (varSSIDList5GIdx >= 9)
		{
			alert("only support less then 8 SSIDs set");
			return ;
		}
		<%
		index = revCmdElemString["ApESSID"]
		while index <= #cmdElemString do
			if (index ~=26) then 
		%>
			varSSIDList5GItemArray[varSSIDList5GIdx][<%=pcdata(index)%>]=document.getElementById("<%=pcdata(cmdElemString[index])%>").value||'';
		<% 
			end
		index = index+1
		end
		%>
		varSSIDList5GItemArray[varSSIDList5GIdx][26]='';
		if (document.getElementById("ApHideSSID").checked == false)
		{
			varSSIDList5GItemArray[varSSIDList5GIdx][<%=pcdata(revCmdElemString["ApHideSSID"])%>]="false";
		}
		else
		{
			varSSIDList5GItemArray[varSSIDList5GIdx][<%=pcdata(revCmdElemString["ApHideSSID"])%>]="true";
		}
		if (document.getElementById("ApPortalEnable").checked == false)
		{
			varSSIDList5GItemArray[varSSIDList5GIdx][<%=pcdata(revCmdElemString["ApPortalEnable"])%>]="false";
		}
		else
		{
			varSSIDList5GItemArray[varSSIDList5GIdx][<%=pcdata(revCmdElemString["ApPortalEnable"])%>]="true";
		}
		varSSIDList5GItemArray[varSSIDList5GIdx][<%=pcdata(revCmdElemString["ApWDSRole"])%>]=role.selectedIndex+1;
		varTabSSIDListSelectIndex = varSSIDList5GIdx;
		varSSIDList5GIdx = varSSIDList5GIdx+1;
		fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
	}

}
function fSSIDListSave()
{
	var role=document.getElementById('ApWDSRole');
	if (validate_SSID() == false)
	{
		return false;
	}

	var elemSSIDList=document.getElementById("idtabSSIDSettingList");
	if (elemSSIDList.rows[varTabSSIDListSelectIndex].style.backgroundColor != "gray")
	{
		alert("Please select one SSID to update");
		return;
	}
	elemSSIDList.rows[varTabSSIDListSelectIndex].style.backgroundColor = "white";

	if (tabTopSelectItemId=="tab24GConfig" && varTabSSIDListSelectIndex<varSSIDList24GIdx)
	{

		<%
		index = revCmdElemString["ApESSID"]
		while index <= #cmdElemString do
			if (index ~=26) then
		%>
			varSSIDList24GItemArray[varTabSSIDListSelectIndex][<%=pcdata(index)%>]=document.getElementById("<%=pcdata(cmdElemString[index])%>").value||'';
		<% 
			end
		index = index+1
		end
		%>
		if (document.getElementById("ApHideSSID").checked == false)
		{
			varSSIDList24GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApHideSSID"])%>]="false";
		}
		else
		{
			varSSIDList24GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApHideSSID"])%>]="true";
		}
		if (document.getElementById("ApPortalEnable").checked == false)
		{
			varSSIDList24GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApPortalEnable"])%>]="false";
		}
		else
		{
			varSSIDList24GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApPortalEnable"])%>]="true";
		}
		//wds repeat mode
		varSSIDList24GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApWDSRole"])%>]=role.selectedIndex+1;
		fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
	}
	else if (tabTopSelectItemId=="tab5GConfig" && varTabSSIDListSelectIndex<varSSIDList5GIdx)
	{
		<%
		index = revCmdElemString["ApESSID"]
		while index <= #cmdElemString do
			if (index ~=26) then
		%>
			varSSIDList5GItemArray[varTabSSIDListSelectIndex][<%=pcdata(index)%>]=document.getElementById("<%=pcdata(cmdElemString[index])%>").value||'';
		<% 
			end
		index = index+1
		end
		%>
		if (document.getElementById("ApHideSSID").checked == false)
		{
			varSSIDList5GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApHideSSID"])%>]="false";
		}
		else
		{
			varSSIDList5GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApHideSSID"])%>]="true";
		}
		if (document.getElementById("ApPortalEnable").checked == false)
		{
			varSSIDList5GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApPortalEnable"])%>]="false";
		}
		else
		{
			varSSIDList5GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApPortalEnable"])%>]="true";
		}
		varSSIDList5GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApWDSRole"])%>]=role.selectedIndex+1;
		fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
	}
}
function fSSIDListDelete()
{
	if(my_global.wds) {
		alert("WDS AP can't delete SSID here!");
		return;
	}
	var elemSSIDList=document.getElementById("idtabSSIDSettingList");
	if (elemSSIDList.rows[varTabSSIDListSelectIndex].style.backgroundColor != "gray")
	{
		alert("Please select one SSID to delete");
		return;
	}
	elemSSIDList.rows[varTabSSIDListSelectIndex].style.backgroundColor = "white";

	if (tabTopSelectItemId=="tab24GConfig" && varTabSSIDListSelectIndex<varSSIDList24GIdx)
	{
		for (var i = varTabSSIDListSelectIndex+1; i < varSSIDList24GIdx; i++)
		{
			<%
			index = revCmdElemString["ApESSID"]
			while index <= #cmdElemString do
			%>
				varSSIDList24GItemArray[i-1][<%=pcdata(index)%>]=varSSIDList24GItemArray[i][<%=pcdata(index)%>];
			<% 
			index = index+1
			end
			%>
		}

		varSSIDList24GIdx = varSSIDList24GIdx-1;
		varTabSSIDListSelectIndex = 1;
		fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
	}
	else if (tabTopSelectItemId=="tab5GConfig" && varTabSSIDListSelectIndex<varSSIDList5GIdx)
	{
		for (var i = varTabSSIDListSelectIndex+1; i < varSSIDList5GIdx; i++)
		{
			<%
			index = revCmdElemString["ApESSID"]
			while index <= #cmdElemString do
			%>
				varSSIDList5GItemArray[i-1][<%=pcdata(index)%>]=varSSIDList5GItemArray[i][<%=pcdata(index)%>];
			<% 
			index = index+1
			end
			%>
		}

		varSSIDList5GIdx = varSSIDList5GIdx-1;
		varTabSSIDListSelectIndex = 1;
		fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
	}
}

function createXMLHttpRequest()
{
	var xmlHttp;
	if (window.XMLHttpRequest) {  // Non-IE browsers
		xmlHttp = new XMLHttpRequest();
	}
	else if (window.ActiveXObject) {  //IE
		xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
	}
	else {  //browsers doesn's support AJAX
			alert("ApConfigSave.htm: XMLHttpRequest is not supported by this browser!");
	}
	return 	xmlHttp;
}

function funMacLimitFileRefreshAjax()
{
	var xmlHttp = createXMLHttpRequest();
	var url = "<%=controller%>/admin/ViaView/MacLimitFileRefresh";
	xmlHttp.open("GET",url,true);
	xmlHttp.onreadystatechange=function(){callbackMacLimit(xmlHttp);};  //set server information function
	xmlHttp.send(null);
}
function callbackMacLimit(xmlHttp)
{
	if (xmlHttp.readyState == 4){
		if (xmlHttp.status == 200)
		{
			var strResponse = xmlHttp.responseText;  // get the web server response message
			//console.log(strResponse);

			//save the mac limit data and refresh this SSID list conteng
			document.getElementById("ApMacLimitList").value = strResponse.replace(/\s+/g,'');
			funtabMacAddresslistClear();
			fMacAddressListUpdate(document.getElementById("ApMacLimitList").value);
			/*
			if (tabTopSelectItemId == "tab24GConfig")
			{
				varSSIDList24GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApMacLimitList"])%>] = strResponse;
			}
			else if (tabTopSelectItemId == "tab5GConfig")
			{
				varSSIDList5GItemArray[varTabSSIDListSelectIndex][<%=pcdata(revCmdElemString["ApMacLimitList"])%>] = strResponse;
			}
			fSSIDListDataUpdate(tabTopSelectItemId,varTabSSIDListSelectIndex);
			*/
		}
	}
}

function funApConfigApplay()
{
	var strSSIDList24GConfig = "";
	for (var i = 1; i < varSSIDList24GIdx; i++)
	{
		strSSIDList24GConfig = strSSIDList24GConfig + "SSIDList2.4GElementStart ";
		<% 
			index = revCmdElemString["ApESSID"]
			while index <= #cmdElemString do
		%>
				if (varSSIDList24GItemArray[i][<%=pcdata(index)%>])
				{
				strSSIDList24GConfig = strSSIDList24GConfig + "<%=pcdata(cmdElemString[index])%>" + "=";
				strSSIDList24GConfig = strSSIDList24GConfig + varSSIDList24GItemArray[i][<%=pcdata(index)%>];
				strSSIDList24GConfig = strSSIDList24GConfig + " ";
				}
				else
				{
				strSSIDList24GConfig = strSSIDList24GConfig + "<%=pcdata(cmdElemString[index])%>" + "=";
				strSSIDList24GConfig = strSSIDList24GConfig + " ";
				}
		<%
			index = index+1
			end
		%>
	}
	var strSSIDList5GConfig = ""; 
	for (var i = 1; i < varSSIDList5GIdx; i++)
	{
		strSSIDList5GConfig = strSSIDList5GConfig + "SSIDList5GElementStart ";
		<% 
			index = revCmdElemString["ApESSID"]
			while index <= #cmdElemString do
		%>
				if (varSSIDList5GItemArray[i][<%=pcdata(index)%>])
				{
				strSSIDList5GConfig = strSSIDList5GConfig + "<%=pcdata(cmdElemString[index])%>" + "=";
				strSSIDList5GConfig = strSSIDList5GConfig + varSSIDList5GItemArray[i][<%=pcdata(index)%>];
				strSSIDList5GConfig = strSSIDList5GConfig + " ";
				}
				else
				{
				strSSIDList5GConfig = strSSIDList5GConfig + "<%=pcdata(cmdElemString[index])%>" + "=";
				strSSIDList5GConfig = strSSIDList5GConfig + " ";
				}
		<%
			index = index+1
			end
		%>
	}

	document.getElementById("SSIDList2.4GConfig").value = strSSIDList24GConfig;
	document.getElementById("SSIDList5GConfig").value = strSSIDList5GConfig;
}

//]]>
</script>
<%+footer%>
